@using WebRecap.Data;
@{
    var pagingInfo = ViewData["PagingInfo"] as WebRecap.Models.ViewModels.PagingInfo;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WebRecap</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/WebRecap.styles.css" asp-append-version="true" />
    <!-- Blazor -->
    <base href="~/" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">WebRecap</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" id="openMenuButton" href="#">Menu</a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container-fluid">
        <div class="row">


            <vc:route-list></vc:route-list>

            <main role="main" class="col-md-10 pb-3" style="background-color:#f0eff7; min-height:100vh;">
                <div id="menuDisplay" style="display: none; flex-direction: row; justify-content: space-evenly; background: white;">
                    <div style="display: flex; flex-direction: column">
                        <vc:drop-down update-comp="DbContextName"></vc:drop-down>
                    </div>
                    <div style="display: flex; flex-direction: column">
                        <vc:drop-down update-comp="SolutionName"></vc:drop-down>
                    </div>
                    <div style="display: flex; flex-direction: column">
                        <vc:drop-down update-comp="ModelName"></vc:drop-down>
                    </div>
                    <div style="display: flex; flex-direction: column">
                        <vc:drop-down update-comp="RazorPageName"></vc:drop-down>
                    </div>
                </div>


                <vc:next-page pages="@pagingInfo" top="true"></vc:next-page>
                @RenderBody()
                <vc:next-page pages="@pagingInfo" top="false"></vc:next-page>

            </main>
        </div>
    </div>
    <!--Blazor-->
    <script src="_framework/blazor.server.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            initializeMenuToggle();
        });

        function initializeMenuToggle() {
            const button = document.getElementById('openMenuButton');
            const menu = document.getElementById('menuDisplay');

            if (button && menu) {
                // Ensure we don't attach the event listener multiple times
                button.removeEventListener('click', toggleMenu);
                button.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent default action if it's a link
                    toggleMenu();
                });
            } else {
                console.error('Menu button or display not found');
            }
        }

        function toggleMenu() {
            const menu = document.getElementById('menuDisplay');
            if (menu) {
                if (menu.style.display === 'none') {
                    menu.style.display = 'flex';
                } else {
                    menu.style.display = 'none';
                }
            }
        }
    </script>
</body>
</html>
@* <script>
    function toggleMenu() {
        const menu = document.getElementById('menuDisplay');
        if (menu.style.display === 'none') {
            menu.style.display = 'flex';
        } else {
            menu.style.display = 'none';
        }
    }

    // Attach the toggleMenu function to the button click event
    document.getElementById('openMenuButton').addEventListener('click', function (event) {
        event.preventDefault(); // Prevent default action if it's a link
        toggleMenu();
    });
</script> *@

